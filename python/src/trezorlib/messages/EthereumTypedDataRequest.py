# Automatically generated by pb2py
# fmt: off
from .. import protobuf as p

if __debug__:
    try:
        from typing import Dict, List, Optional  # noqa: F401
        from typing_extensions import Literal  # noqa: F401
    except ImportError:
        pass


class EthereumTypedDataRequest(p.MessageType):
    MESSAGE_WIRE_TYPE = 465

    def __init__(
        self,
        *,
        member_path: Optional[List[int]] = None,
        expect_type: Optional[bool] = None,
        signature: Optional[bytes] = None,
        address: Optional[str] = None,
    ) -> None:
        self.member_path = member_path if member_path is not None else []
        self.expect_type = expect_type
        self.signature = signature
        self.address = address

    @classmethod
    def get_fields(cls) -> Dict:
        return {
            1: ('member_path', p.UVarintType, p.FLAG_REPEATED),
            2: ('expect_type', p.BoolType, None),
            3: ('signature', p.BytesType, None),
            4: ('address', p.UnicodeType, None),
        }
