# Automatically generated by pb2py
# fmt: off
import protobuf as p

if __debug__:
    try:
        from typing import Dict, List, Optional  # noqa: F401
        from typing_extensions import Literal  # noqa: F401
    except ImportError:
        pass


class EthereumTypedDataAck(p.MessageType):
    MESSAGE_WIRE_TYPE = 466

    def __init__(
        self,
        *,
        member_name: Optional[str] = None,
        member_type: Optional[str] = None,
        member_array_n: Optional[int] = None,
        member_children: Optional[int] = None,
        member_value: Optional[bytes] = None,
    ) -> None:
        self.member_name = member_name
        self.member_type = member_type
        self.member_array_n = member_array_n
        self.member_children = member_children
        self.member_value = member_value

    @classmethod
    def get_fields(cls) -> Dict:
        return {
            1: ('member_name', p.UnicodeType, None),
            2: ('member_type', p.UnicodeType, None),
            3: ('member_array_n', p.UVarintType, None),
            4: ('member_children', p.UVarintType, None),
            5: ('member_value', p.BytesType, None),
        }
